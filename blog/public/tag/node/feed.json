{
    "version": "https://jsonfeed.org/version/1",
    "title": "盧瞳Blog • All posts by \"node\" tag",
    "description": "",
    "home_page_url": "http://blog.1think2program.cn",
    "items": [
        {
            "id": "http://blog.1think2program.cn/2023/07/12/JavaScript%E5%AD%A6%E4%B9%A0/js%E5%AE%9E%E6%88%98%E5%B0%8F%E8%AF%B4%E7%88%AC%E8%99%AB/",
            "url": "http://blog.1think2program.cn/2023/07/12/JavaScript%E5%AD%A6%E4%B9%A0/js%E5%AE%9E%E6%88%98%E5%B0%8F%E8%AF%B4%E7%88%AC%E8%99%AB/",
            "title": "js",
            "date_published": "2023-07-12T13:36:17.000Z",
            "content_html": "<h2 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h2><h3 id=\"网页gbk乱码处理\"><a href=\"#网页gbk乱码处理\" class=\"headerlink\" title=\"网页gbk乱码处理\"></a>网页gbk乱码处理</h3><blockquote>\n<p>使用 axios 请求 gbk 编码的网站，将会出现乱码，原因很简单，node 默认字符编码为 utf8，如果要正常显示 gbk 数据的话就需要将 gbk 转 utf8 格式。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> iconv <span class=\"keyword\">from</span> <span class=\"string\">&#x27;iconv-lite&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">axios</span><br><span class=\"line\">  .<span class=\"title function_\">get</span>(<span class=\"string\">`https://www.ip138.com/`</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">responseType</span>: <span class=\"string\">&#x27;arraybuffer&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">transformResponse</span>: [</span><br><span class=\"line\">      <span class=\"keyword\">function</span> (<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> iconv.<span class=\"title function_\">decode</span>(data, <span class=\"string\">&#x27;gbk&#x27;</span>)</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res.<span class=\"property\">data</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// 或者使用async 和 await</span></span><br><span class=\"line\"> <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">request</span>(<span class=\"params\">url</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = <span class=\"keyword\">await</span> axios</span><br><span class=\"line\">        .<span class=\"title function_\">get</span>(url, &#123;</span><br><span class=\"line\">            <span class=\"attr\">responseType</span>: <span class=\"string\">&#x27;arraybuffer&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">transformResponse</span>: [</span><br><span class=\"line\">                <span class=\"keyword\">function</span> (<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> iconv.<span class=\"title function_\">decode</span>(data, <span class=\"string\">&#x27;gbk&#x27;</span>)</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">            ],</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result.<span class=\"property\">data</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>或者不使用<code>transformResponse</code>，在响应结束后使用<code>iconv.decode(res.data, &#39;gbk&#39;)</code>，使用<code>transformResponse</code>相对优雅一点。</p>\n<p>如果返回的是 json 格式的话，可以直接JSON.parse转为 json 对象（前提得确保是 json 格式，不然解析报错）</p>\n<p><code>return JSON.parse(iconv.decode(data, &#39;gbk&#39;))</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9rdWl6dW8uY24vZG9jcy9heGlvcy1yZXF1ZXN0LWdiay1wYWdlLWVuY29kaW5nLXNvbHV0aW9uLw==\">原文链接</span></p>\n",
            "tags": [
                "js",
                "node"
            ]
        }
    ]
}